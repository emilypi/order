(undo-tree-save-format-version . 1)
"21e72875a1fd8404be04d1e3acdb96cb30ab4d1b"
[nil nil nil nil (25850 3650 134400 0) 0 nil]
([nil nil ((#("{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE MultiWayIf #-}
" 0 31 (fontified t face haskell-pragma-face) 31 32 (fontified t) 32 59 (fontified t face haskell-pragma-face) 59 60 (fontified t)) . 192) (undo-tree-id0 . -60) (undo-tree-id1 . -30) (undo-tree-id2 . -32) (undo-tree-id3 . -58) (undo-tree-id4 . -60) 252 (t 25850 3432 20878 144000)) nil (25850 3650 134397 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-doc-face)) . -387) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 388 (t 25850 3650 135592 599000)) nil (25850 3653 641141 0) 0 nil])
([nil nil ((387 . 388)) nil (25850 3653 641085 0) 0 nil])
([nil nil ((#("--                Siddharth Bhat <siddu.druid@gmail.com>" 0 56 (fontified t face font-lock-doc-face)) . 555) (t 25850 3653 642431 712000)) nil (25850 3658 631615 0) 0 nil])
([nil nil ((555 . 557)) nil (25850 3678 725780 0) 0 nil])
([nil nil ((#("#if (MIN_VERSION_base(4,15,0))
#ifndef mingw32_HOST_OS" 0 1 (fontified t syntax-table (1) face font-lock-preprocessor-face) 1 4 (fontified t face font-lock-preprocessor-face) 4 5 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 5 21 (fontified t face font-lock-preprocessor-face) 21 22 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 22 23 (fontified t syntax-table (2) face font-lock-preprocessor-face) 23 24 (fontified t face font-lock-preprocessor-face) 24 26 (fontified t syntax-table (2) face font-lock-preprocessor-face) 26 27 (fontified t face font-lock-preprocessor-face) 27 28 (fontified t syntax-table (2) face font-lock-preprocessor-face) 28 29 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 29 30 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 30 31 (fontified t font-lock-multiline t face font-lock-preprocessor-face) 31 32 (fontified t syntax-table (1) face font-lock-preprocessor-face) 32 54 (fontified t face font-lock-preprocessor-face)) . 1521) (undo-tree-id367 . -54) (undo-tree-id368 . -11) (undo-tree-id369 . -54) 1575 (t 25850 3658 632859 226000)) nil (25850 3685 229822 0) 0 nil] [nil nil ((#("#if (MIN_VERSION_base(4,15,0))
#ifndef mingw32_HOST_OS
import GHC.Event
#endif" 0 1 (syntax-table (1) fontified t face font-lock-preprocessor-face) 1 4 (fontified t face font-lock-preprocessor-face) 4 5 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 5 21 (fontified t face font-lock-preprocessor-face) 21 22 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 22 23 (syntax-table (2) fontified t face font-lock-preprocessor-face) 23 24 (fontified t face font-lock-preprocessor-face) 24 26 (syntax-table (2) fontified t face font-lock-preprocessor-face) 26 27 (fontified t face font-lock-preprocessor-face) 27 28 (syntax-table (2) fontified t face font-lock-preprocessor-face) 28 29 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 29 30 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 30 31 (fontified t font-lock-multiline t face font-lock-preprocessor-face) 31 32 (syntax-table (1) fontified t face font-lock-preprocessor-face) 32 54 (fontified t face font-lock-preprocessor-face) 54 55 (fontified t font-lock-multiline t face font-lock-preprocessor-face) 55 61 (fontified t face haskell-keyword-face) 61 62 (fontified t) 62 71 (fontified t face haskell-constructor-face) 71 72 (fontified t) 72 73 (syntax-table (1) fontified t face font-lock-preprocessor-face) 73 78 (fontified t face font-lock-preprocessor-face)) . 1521) (undo-tree-id120 . -78) (undo-tree-id121 . 7) (undo-tree-id122 . -11) (undo-tree-id123 . -78) (undo-tree-id124 . -72) (undo-tree-id125 . -78) (undo-tree-id126 . -78) (undo-tree-id127 . -78) (undo-tree-id128 . -78) (undo-tree-id129 . -78) (undo-tree-id130 . -78) (undo-tree-id131 . -78) (undo-tree-id132 . -78) (undo-tree-id133 . -78) (undo-tree-id134 . -78) (undo-tree-id135 . -78) (undo-tree-id136 . -78) (undo-tree-id137 . -78) (undo-tree-id138 . -78) (undo-tree-id139 . -78) (undo-tree-id140 . -78) (undo-tree-id141 . -78) (undo-tree-id142 . -78) (undo-tree-id143 . -78) (undo-tree-id144 . -78) (undo-tree-id145 . -78) (undo-tree-id146 . -78) (undo-tree-id147 . -78) (undo-tree-id148 . -78) (undo-tree-id149 . -78) (undo-tree-id150 . -78) (undo-tree-id151 . -78) (undo-tree-id152 . -78) (undo-tree-id153 . -78) (undo-tree-id154 . -78) (undo-tree-id155 . -78) (undo-tree-id156 . -78) (undo-tree-id157 . -78) (undo-tree-id158 . -78) (undo-tree-id159 . -78) (undo-tree-id160 . -78) (undo-tree-id161 . -78) (undo-tree-id162 . -78) (undo-tree-id163 . -78) (undo-tree-id164 . -78) (undo-tree-id165 . -78) (undo-tree-id166 . -78) (undo-tree-id167 . -78) (undo-tree-id168 . -78) (undo-tree-id169 . -78) (undo-tree-id170 . -78) (undo-tree-id171 . -78) (undo-tree-id172 . -78) (undo-tree-id173 . -78) (undo-tree-id174 . -78) (undo-tree-id175 . -78) (undo-tree-id176 . -78) (undo-tree-id177 . -78) (undo-tree-id178 . -78) (undo-tree-id179 . -78) (undo-tree-id180 . -78) (undo-tree-id181 . -78) (undo-tree-id182 . -78) (undo-tree-id183 . -78) (undo-tree-id184 . -78) (undo-tree-id185 . -78) (undo-tree-id186 . -78) (undo-tree-id187 . -78) (undo-tree-id188 . -78) (undo-tree-id189 . -78) (undo-tree-id190 . -78) (undo-tree-id191 . -78) (undo-tree-id192 . -78) (undo-tree-id193 . -78) (undo-tree-id194 . -78) (undo-tree-id195 . -78) (undo-tree-id196 . -78) (undo-tree-id197 . -78) (undo-tree-id198 . -78) (undo-tree-id199 . -78) (undo-tree-id200 . -78) (undo-tree-id201 . -78) (undo-tree-id202 . -78) (undo-tree-id203 . -78) (undo-tree-id204 . -78) (undo-tree-id205 . -78) (undo-tree-id206 . -78) (undo-tree-id207 . -78) (undo-tree-id208 . -78) (undo-tree-id209 . -78) (undo-tree-id210 . -78) (undo-tree-id211 . -78) (undo-tree-id212 . -78) (undo-tree-id213 . -78) (undo-tree-id214 . -78) (undo-tree-id215 . -78) (undo-tree-id216 . -78) (undo-tree-id217 . -78) (undo-tree-id218 . -78) (undo-tree-id219 . -78) (undo-tree-id220 . -78) (undo-tree-id221 . -78) (undo-tree-id222 . -78) (undo-tree-id223 . -78) (undo-tree-id224 . -78) (undo-tree-id225 . -78) (undo-tree-id226 . -78) (undo-tree-id227 . -78) (undo-tree-id228 . -78) (undo-tree-id229 . -78) (undo-tree-id230 . -78) (undo-tree-id231 . -78) (undo-tree-id232 . -78) (undo-tree-id233 . -78) (undo-tree-id234 . -78) (undo-tree-id235 . -78) (undo-tree-id236 . -78) (undo-tree-id237 . -78) (undo-tree-id238 . -78) (undo-tree-id239 . -78) (undo-tree-id240 . -78) (undo-tree-id241 . -78) (undo-tree-id242 . -78) (undo-tree-id243 . -78) (undo-tree-id244 . -78) (undo-tree-id245 . -78) (undo-tree-id246 . -78) (undo-tree-id247 . -78) (undo-tree-id248 . -78) (undo-tree-id249 . -78) (undo-tree-id250 . -78) (undo-tree-id251 . -78) (undo-tree-id252 . -78) (undo-tree-id253 . -78) (undo-tree-id254 . -78) (undo-tree-id255 . -78) (undo-tree-id256 . -78) (undo-tree-id257 . -78) (undo-tree-id258 . -78) (undo-tree-id259 . -78) (undo-tree-id260 . -78) (undo-tree-id261 . -78) (undo-tree-id262 . -78) (undo-tree-id263 . -78) (undo-tree-id264 . -78) (undo-tree-id265 . -78) (undo-tree-id266 . -78) (undo-tree-id267 . -78) 1599 (t 25850 3658 632859 226000)) ((1521 . 1599)) (25850 3678 725316 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1520) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) 1521) nil (25850 3685 229820 0) 0 nil])
nil
([nil nil ((#("#endif" 0 1 (syntax-table (1) fontified t face font-lock-preprocessor-face) 1 6 (fontified t face font-lock-preprocessor-face)) . 1538) (undo-tree-id362 . -1) (undo-tree-id363 . -2)) nil (25850 3685 229819 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1537) (undo-tree-id272 . -1) (undo-tree-id273 . 1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 1538) nil (25850 3685 229815 0) 0 nil])
([nil nil ((#("#endif" 0 1 (fontified t face font-lock-preprocessor-face syntax-table (1)) 1 6 (fontified t face font-lock-preprocessor-face)) . 1555) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -2) (undo-tree-id271 . -6)) nil (25850 3685 229774 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1554) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . 1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) 1555 (t 25850 3685 231225 650000)) nil (25850 3685 953199 0) 0 nil])
([nil nil ((#("#include \"HsBaseConfig.h\"" 0 1 (syntax-table (1) fontified t face font-lock-preprocessor-face) 1 9 (fontified t face font-lock-preprocessor-face) 9 25 (fontified t face font-lock-preprocessor-face)) . 1557) (undo-tree-id573 . -25) (undo-tree-id574 . -25) (undo-tree-id575 . -25) (undo-tree-id576 . -25) (undo-tree-id577 . -25) (undo-tree-id578 . -25) (undo-tree-id579 . -25) (undo-tree-id580 . -25) (undo-tree-id581 . -25) (undo-tree-id582 . -25) (undo-tree-id583 . -25) (undo-tree-id584 . -25) (undo-tree-id585 . -25) (undo-tree-id586 . -25) (undo-tree-id587 . -25) (undo-tree-id588 . -25) (undo-tree-id589 . -25) (undo-tree-id590 . -25) (undo-tree-id591 . -25) (undo-tree-id592 . -25) (undo-tree-id593 . -25) (undo-tree-id594 . -25) (undo-tree-id595 . -25) (undo-tree-id596 . -25) (undo-tree-id597 . -25) (undo-tree-id598 . -25) (undo-tree-id599 . -25) (undo-tree-id600 . -25) (undo-tree-id601 . -25) (undo-tree-id602 . -25) (undo-tree-id603 . -25) (undo-tree-id604 . -25) (undo-tree-id605 . -25) (undo-tree-id606 . -25) (undo-tree-id607 . -25) (undo-tree-id608 . -25) (undo-tree-id609 . -25) (undo-tree-id610 . -25) (undo-tree-id611 . -25) (undo-tree-id612 . -25) (undo-tree-id613 . -25) (undo-tree-id614 . -25) (undo-tree-id615 . -25) (undo-tree-id616 . -25) (undo-tree-id617 . -25) (undo-tree-id618 . -25) (undo-tree-id619 . -25) (undo-tree-id620 . -25) (undo-tree-id621 . -25) (undo-tree-id622 . -25) (undo-tree-id623 . -25) (undo-tree-id624 . -25) (undo-tree-id625 . -25) (undo-tree-id626 . -25) (undo-tree-id627 . -25) (undo-tree-id628 . -25) (t 25850 3685 954718 488000)) nil (25850 3690 283338 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1556) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) 1557 (t 25850 3690 284831 376000)) nil (25850 3691 85154 0) 0 nil])
([nil nil ((nil fontified t 2649 . 2653) (nil face haskell-constructor-face 2649 . 2653) (#("Solo" 0 4 (fontified t face haskell-constructor-face)) . -2647) (2651 . 2657) (nil fontified t 2625 . 2629) (nil font-lock-multiline t 2625 . 2629) (nil haskell-type t 2625 . 2629) (nil face haskell-type-face 2625 . 2629) (#("Solo" 0 4 (fontified t font-lock-multiline t haskell-type t face haskell-type-face)) . -2623) (2627 . 2633) (nil fontified t 2581 . 2585) (nil face haskell-constructor-face 2581 . 2585) (#("Solo" 0 4 (fontified t face haskell-constructor-face)) . -2579) (2583 . 2589) (nil fontified t 2557 . 2561) (t 25850 3691 86954 820000) (nil font-lock-multiline t 2557 . 2561) (t 25850 3691 86954 820000) (nil haskell-type t 2557 . 2561) (t 25850 3691 86954 820000) (nil face haskell-type-face 2557 . 2561) (t 25850 3691 86954 820000) (#("Solo" 0 4 (fontified t font-lock-multiline t haskell-type t face haskell-type-face)) . -2555) (t 25850 3691 86954 820000) (2559 . 2565) 2518 (t 25850 3691 86954 820000)) nil (25850 3699 724611 0) 0 nil])
([nil nil ((#("M" 0 1 (fontified t font-lock-multiline t haskell-type t face haskell-type-face)) . -2555) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#("k" 0 1 (fontified t font-lock-multiline t haskell-type t face haskell-type-face)) . -2556) (undo-tree-id836 . -1) (undo-tree-id837 . -1) 2557 (t 25850 3699 726255 758000)) nil (25850 3707 20261 0) 0 nil])
([nil nil ((#("M" 0 1 (fontified t font-lock-multiline t haskell-type t face haskell-type-face)) . -2621) (undo-tree-id832 . -1) (#("k" 0 1 (fontified t font-lock-multiline t haskell-type t face haskell-type-face)) . -2622) (undo-tree-id833 . -1) 2623) nil (25850 3707 20255 0) 0 nil])
([nil nil ((#("#if (MIN_VERSION_base(4,15,0))
#ifndef mingw32_HOST_OS" 0 1 (syntax-table (1) fontified t face font-lock-preprocessor-face font-lock-multiline t haskell-type t) 1 4 (fontified t face font-lock-preprocessor-face) 4 5 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 5 21 (fontified t face font-lock-preprocessor-face) 21 22 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 22 23 (syntax-table (2) fontified t face font-lock-preprocessor-face) 23 24 (fontified t face font-lock-preprocessor-face) 24 26 (syntax-table (2) fontified t face font-lock-preprocessor-face) 26 27 (fontified t face font-lock-preprocessor-face) 27 28 (syntax-table (2) fontified t face font-lock-preprocessor-face) 28 29 (fontified t face (rainbow-delimiters-depth-2-face font-lock-preprocessor-face)) 29 30 (fontified t face (rainbow-delimiters-depth-1-face font-lock-preprocessor-face)) 30 31 (fontified t font-lock-multiline t face font-lock-preprocessor-face) 31 32 (syntax-table (1) fontified t face font-lock-preprocessor-face) 32 54 (fontified t face font-lock-preprocessor-face)) . 2360) (undo-tree-id838 . -54) (undo-tree-id839 . -54) 2414 (t 25850 3707 21868 285000)) nil (25850 3714 74026 0) 0 nil])
([nil nil ((#("#endif" 0 1 (syntax-table (1) fontified t face font-lock-preprocessor-face font-lock-multiline t haskell-type t) 1 6 (fontified t face font-lock-preprocessor-face font-lock-multiline t haskell-type t)) . 2462) (undo-tree-id840 . -2) (undo-tree-id841 . -2) (undo-tree-id842 . -2) (t 25850 3714 75550 400000)) nil (25850 3717 844719 0) 0 nil])
([nil nil ((#("#endif" 0 1 (syntax-table (1) fontified t face font-lock-preprocessor-face) 1 6 (fontified t face font-lock-preprocessor-face)) . 2594) (undo-tree-id843 . -1) (undo-tree-id844 . -2) (t 25850 3717 846969 302000)) nil (25850 3724 854335 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2593) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . 1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) 2594 (t 25850 3724 856667 504000)) nil (25850 3725 846645 0) 0 nil])
([nil current ((#("
" 0 1 (fontified t font-lock-multiline t haskell-type t)) . -2462) (undo-tree-id1074 . -1) 2463 (t 25850 3725 848430 536000)) nil (25850 3727 304214 0) 0 nil])
nil
